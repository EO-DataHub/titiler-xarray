name: Test and Deploy

# On every pull request, but only on push to main
on:
  push:
    branches:
    - main
    - feat/add-5xx-alarm
    tags:
    - '*'
    paths:
      # Only run test and docker publish if some code have changed
      - 'pyproject.toml'
      - 'titiler/**'
      - '.pre-commit-config.yaml'
  pull_request:
env:
  LATEST_PY_VERSION: '3.10'

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  # tests:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ['3.8', '3.9', '3.10', '3.11']

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install -e .["test"]

  #     - name: run pre-commit
  #       if: ${{ matrix.python-version == env.LATEST_PY_VERSION }}
  #       run: |
  #         python -m pip install pre-commit
  #         pre-commit run --all-files

  #     - name: Run tests
  #       run: python -m pytest --cov titiler.xarray --cov-report term-missing -s -vv
  deploy:
    # needs: [tests]
    runs-on: ubuntu-latest
    # if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'

    defaults:
      run:
        working-directory: infrastructure/aws

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::444055461661:role/github-actions-role-eodc
          role-session-name: samplerolesession
          aws-region: us-west-2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install cdk
        run: npm install -g aws-cdk

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-cdk.txt

      # Build and Deploy CDK application
      - name: Build & Deploy
        run: npm run cdk -- deploy titiler-xarray-production
        env:
          TITILER_XARRAY_PYTHONWARNINGS: ignore
          TITILER_XARRAY_DEBUG: True
          TITILER_STACK_ALARM_EMAIL: ${{ secrets.ALARM_EMAIL }}
          TITILER_STACK_STAGE: production
