name: CI

# On every pull request, but only on push to main
on:
  push:
    branches:
    - main
    tags:
    - '*'
    paths:
      # Only run test and docker publish if some code have changed
      - 'pyproject.toml'
      - 'titiler/**'
      - '.pre-commit-config.yaml'
  pull_request:
env:
  LATEST_PY_VERSION: '3.10'

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .["test"]

      - name: run pre-commit
        if: ${{ matrix.python-version == env.LATEST_PY_VERSION }}
        run: |
          python -m pip install pre-commit
          pre-commit run --all-files

      - name: Run tests
        run: python -m pytest --cov titiler.xarray --cov-report term-missing -s -vv

  # deploy:
  #   needs: [tests, publish]
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'

  #   defaults:
  #     run:
  #       working-directory: deployment/aws

  #   steps:
  #     - uses: actions/checkout@v3

  #     # Let's wait a bit to make sure Pypi is up to date
  #     - name: Sleep for 120 seconds
  #       run: sleep 120s
  #       shell: bash

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '14.x'

  #     - name: Install cdk
  #       run: npm install -g

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.x'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install -r requirements-cdk.txt

  #     # Let's wait a bit to make sure package is available on pypi
  #     - name: Sleep for 120 seconds
  #       run: sleep 120s
  #       shell: bash

  #     # Build and Deploy CDK application
  #     - name: Build & Deploy
  #       run: npm run cdk -- deploy ${{ secrets.STACK_NAME }}-lambda-${{ secrets.STACK_STAGE }} --require-approval never
  #       env:
  #         TITILER_STACK_NAME: ${{ secrets.STACK_NAME }}
  #         TITILER_STACK_STAGE: ${{ secrets.STACK_STAGE }}
  #         TITILER_STACK_MEMORY: ${{ secrets.STACK_MEMORY }}
  #         TITILER_STACK_OWNER: ${{ secrets.STACK_OWNER }}
  #         TITILER_STACK_CLIENT: ${{ secrets.STACK_CLIENT }}
  #         TITILER_STACK_BUCKETS: ${{ secrets.STACK_BUCKETS }}
